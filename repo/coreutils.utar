{
  [ "/bin/drive" ] = "local G={...}local IT=shell.dir()if G[1]~=nil then\
IT=shell.resolve(G[1])end\
if fs.exists(IT)then\
write(fs.getDrive(IT)..\" (\")local E=fs.getFreeSpace(IT)\
if E>1024*1024 then\
print((\
math.floor(E/ (100*1000))/10)..\"MB remaining)\")elseif E>1024 then\
print(math.floor(E/1000)..\"KB remaining)\")else print(E..\"B remaining)\")end else print(\"No such path\")end",
  [ "/bin" ] = true,
  [ "/bin/id" ] = "local OV=nil;local L={...}if#L>0 then OV=tostring(L[1])end\
if OV==nil then\
print(\
\"This is computer #\"..os.getComputerID())local I=os.getComputerLabel()if I then\
print(\"This computer is labelled \\\"\"..I..\"\\\"\")end else local T=disk.hasData(OV)if not T then\
print(\"No disk in drive \"..OV)return end\
print(\"The disk is #\"..disk.getID(OV))local AL=disk.getLabel(OV)if AL then\
print(\"The disk is labelled \\\"\"..AL..\"\\\"\")end end",
  [ "/bin/readlink" ] = "local Y={...}\
if#Y<1 then error(\"Usage: readlink <LINK>\")end\
local UB=fs.getInfo(shell.resolve(Y[1])).linkto;if UB then print(UB)else error(\"Not a link!\")end",
  [ "/bin/mv" ] = "local TY={...}if#TY<2 then\
print(\"Usage: mv <source> <destination>\")return end;local D=shell.resolve(TY[1])\
local Z=shell.resolve(TY[2])local W=fs.find(D)\
if#W>0 then\
for HW,XG in ipairs(W)do\
if fs.isDir(Z)then\
fs.move(XG,fs.combine(Z,fs.getName(XG)))elseif#W==1 then fs.move(XG,Z)else\
printError(\"Cannot overwrite file multiple times\")return end end else printError(\"No matching files\")end",
  [ "/bin/modprobe" ] = "argv={...}if#argv==0 then\
print(\"Usage: modprobe <module1> [module2] ...\")return end;for i=1,#argv do\
kernel.loadModule(argv[i],false)end",
  [ "/bin/ls" ] = "local E={...}local YO=shell.dir()local TP={}\
if#E>0 then if E[1]:sub(1,1)==\"-\"then\
TP=E[1]else YO=E[1]end;if#E==2 then YO=E[2]end end;local SE=false;local SB=false\
for i=2,#TP do if TP:sub(i,i)==\"a\"then SE=true end;if\
TP:sub(i,i)==\"l\"then SB=true end end;YO=fs.normalizePath(YO)files=fs.list(YO)local HY=0;local OM;for i=1,#files do\
OM=string.len(files[i])if OM>HY then HY=OM end end;local H=\"-\"local T=\"\"\
for i=1,#files do\
if(\
files[i]:sub(1,1)~=\".\")or SE then if\
fs.isDir(YO..\"/\"..files[i])then\
if term.isColor()then term.setTextColor(colors.blue)end;H=\"d\"end\
if fs.getInfo(YO..\
\"/\"..files[i]).linkto then if term.isColor()then\
term.setTextColor(colors.cyan)end end\
if SB then write(files[i])\
for j=string.len(files[i]),HY do write(\" \")end;if fs.getInfo(YO..\"/\"..files[i]).linkto then\
T=\" -> \"..fs.getInfo(YO..\"/\"..\
files[i]).linkto else T=\"\"end\
print(H,table.concat(fsd.normalizePerms(fsd.getInfo(\
YO..\"/\"..files[i]).perms),\"\"),\" \",users.getUsernameByUID(fsd.getInfo(\
YO..\"/\"..files[i]).owner),T)else write(files[i]..\" \")end\
if term.isColor()then term.setTextColor(colors.white)end;H=\"-\"T=\"\"end end;if not SB then print()end",
  [ "/bin/rm" ] = "local H={...}\
if#H<1 then print(\"Usage: rm <path>\")return end;local XV=shell.resolve(H[1])local L=fs.find(XV)\
if#L>0 then for U,W in ipairs(L)do\
fs.delete(W)end else printError(\"No matching files\")end",
  [ "/bin/clear" ] = "term.clear()term.setCursorPos(1,1)",
  [ "/bin/reboot" ] = "\
if term.isColour()then term.setTextColour(colours.yellow)end;print(\"Goodbye\")\
term.setTextColour(colours.white)sleep(1)os.reboot()",
  [ "/bin/ln" ] = "local X={...}\
if#X<2 then error(\"Usage ln <TARGET> <LINK_NAME>\")end\
if\
fs.exists(fs.normalizePath(shell.resolve(X[2])))then error(\"Link already exists!\")end\
if not\
fs.exists(fs.normalizePath(shell.resolve(X[1])))then error(\"Target does not exists!\")end\
if\
fs.isDir(fs.normalizePath(shell.resolve(X[1])))then\
fs.makeDir(fs.normalizePath(shell.resolve(X[2])))else\
fs.open(fs.normalizePath(shell.resolve(X[2])),\"w\").close()end\
fs.setNode(shell.resolve(X[2]),nil,nil,shell.resolve(X[1]))",
  [ "/bin/cp" ] = "local Q={...}if#Q<2 then print(\"Usage: cp <source> <destination>\")\
return end;local K=shell.resolve(Q[1])\
local S=shell.resolve(Q[2])local I=fs.find(K)\
if#I>0 then\
for NS,L in ipairs(I)do\
if fs.isDir(S)then\
fs.copy(L,fs.combine(S,fs.getName(L)))elseif#I==1 then fs.copy(L,S)else\
printError(\"Cannot overwrite file multiple times\")return end end else printError(\"No matching files\")end",
  [ "/PKGINFO.lua" ] = "DEPENDS = {\"uberkernel\", \"corelib\"}\
VERSION = {0, 2, 1}",
  [ "/bin/kill" ] = "argv={...}if#argv==0 then\
print(\"Usage: kill <PID> [TERM|KILL]\")return end;local NZ,P\
if#argv==1 then P=\"KILL\"else P=argv[2]end;if P==\"KILL\"then NZ=2 end;if P==\"TERM\"then NZ=1 end\
thread.kill(tonumber(argv[1]),NZ)",
  [ "/bin/cd" ] = "local C={...}\
if#C<1 then print(\"Usage: cd <path>\")return end;local B=shell.resolve(C[1])if fs.isDir(B)then shell.setDir(B)else\
print(\"Not a directory\")return end",
  [ "/bin/mount" ] = "local I={...}if#I<3 then\
error(\"Usage: mount <DEV> <FS> <MOUNTPOINT>\")end;local C=fs.open(I[1],\"r\")\
local K=textutils.unserialize(C.readAll())C.close()fs.mount(\"/\"..K.mounted,I[2],I[3])",
  [ "/bin/chmod" ] = "local DN={...}if#DN<2 then\
print(\"Usage: chmod <mode> <file1> [file2] ...\")return end\
for i=2,#DN do fsd.setNode(fsd.normalizePath(shell.resolve(DN[i])),\
nil,DN[1])end",
  [ "/bin/shutdown" ] = "\
if term.isColour()then term.setTextColour(colours.yellow)end;print(\"Goodbye\")\
term.setTextColour(colours.white)sleep(1)os.shutdown()",
  [ "/bin/alias" ] = "local BZ={...}if#BZ>2 then print(\"Usage: alias <alias> <program>\")\
return end;local HW=BZ[1]local DW=BZ[2]\
if HW and DW then\
shell.setAlias(HW,DW)elseif HW then shell.clearAlias(HW)else local CK=shell.aliases()local QC={}for HW,ZG in\
pairs(CK)do table.insert(QC,HW)end\
table.sort(QC)textutils.pagedTabulate(QC)end",
  [ "/bin/eject" ] = "local ZK={...}\
if#ZK==0 then print(\"Usage: eject <drive>\")return end;local VQ=ZK[1]local P=disk.isPresent(VQ)if not P then\
print(\"Nothing in \"..VQ..\" drive\")return end;disk.eject(VQ)",
  [ "/bin/ps" ] = "local WH=thread.getRunningThreads()local Y={}for KZ,YY in pairs(WH)do\
table.insert(Y,{YY.pid,YY.desc,users.getUsernameByUID(YY.uid)})end\
textutils.tabulate({\"PID\",\"CMD\",\"USER\"},unpack(Y))",
  [ "/bin/chown" ] = "local XV={...}if#XV<2 then\
print(\"Usage: chown <owner> <file1> [file2] ...\")return end;for i=2,#XV do\
fsd.setNode(fsd.normalizePath(shell.resolve(XV[i])),users.getUIDByUsername(XV[1]),\
nil)end",
  [ "/bin/label" ] = "\
local function A()print(\"Usages:\")print(\"label get\")\
print(\"label get <drive>\")print(\"label set <text>\")\
print(\"label set <drive> <text>\")print(\"label clear\")print(\"label clear <drive>\")end\
local function MUS(VX)\
if peripheral.getType(VX)==\"drive\"then local K=disk.hasData(VX)if\
not K then print(\"No disk in \"..VX..\" drive\")\
return false end else\
print(\"No disk drive named \"..VX)return false end;return true end\
local function GX(ZO)\
if ZO~=nil then\
if MUS(ZO)then local HO=disk.getLabel(ZO)if HO then\
print(\"Disk label is \\\"\"..HO..\"\\\"\")else print(\"No Disk label\")end end else local CI=os.getComputerLabel()\
if CI then\
print(\"Computer label is \\\"\"..CI..\"\\\"\")else print(\"No Computer label\")end end end\
local function V(K,SF)\
if K~=nil then\
if MUS(K)then disk.setLabel(K,SF)local E=disk.getLabel(K)if E then print(\
\"Disk label set to \\\"\"..E..\"\\\"\")else\
print(\"Disk label cleared\")end end else os.setComputerLabel(SF)local Z=os.getComputerLabel()if Z then print(\
\"Computer label set to \\\"\"..Z..\"\\\"\")else\
print(\"Computer label cleared\")end end end;local T={...}local HU=T[1]\
if HU==\"get\"then\
if#T==1 then GX(nil)elseif#T==2 then GX(T[2])else A()end elseif HU==\"set\"then\
if#T==2 then V(nil,T[2])elseif#T==3 then V(T[2],T[3])else A()end elseif HU==\"clear\"then\
if#T==1 then V(nil,nil)elseif#T==2 then V(T[2],nil)else A()end else A()end",
  [ "/bin/lua" ] = "local W={...}if#W>0 then\
print(\"This is an interactive Lua prompt.\")print(\"To run a lua program, just type its name.\")\
return end;local HO=true;local J={}\
local D={[\"exit\"]=function()\
HO=false end,[\"_echo\"]=function(...)return...end}setmetatable(D,{__index=getfenv()})if term.isColour()then\
term.setTextColour(colours.yellow)end\
print(\"Interactive Lua prompt.\")print(\"Call exit() to exit.\")\
term.setTextColour(colours.white)\
while HO do write(\"lua> \")local H=read(nil,J)table.insert(J,H)local A=0\
local SM,DV=loadstring(H,\"lua\")\
local B,I=loadstring(\"return _echo(\"..H..\");\",\"lua\")\
if not SM then if B then SM=B;DV=nil;A=1 end else if B then SM=B end end\
if SM then setfenv(SM,D)local QA={pcall(SM)}\
if QA[1]then local IWG=1\
while\
(QA[IWG+1]~=nil)or(IWG<=A)do local Z=QA[IWG+1]if type(Z)==\"table\"then\
local ZSO,GO=pcall(textutils.serialise,Z)if ZSO then print(GO)else print(tostring(Z))end else\
print(tostring(Z))end\
IWG=IWG+1 end else printError(QA[2])end else printError(DV)end end",
  [ "/bin/umount" ] = "local OU={...}\
if#OU<1 then error(\"Usage: umount <PATH>\")end;fs.umountPath(OU[1])",
  [ "/bin/mkdir" ] = "local J={...}\
if#J<1 then print(\"Usage: mkdir <path>\")return end;local FW=shell.resolve(J[1])fs.makeDir(FW)",
  [ "/bin/exit" ] = "shell.exit()",
  [ "/bin/log" ] = "shell.run(\"edit /boot/log\")",
  [ "/bin/edit" ] = "local ES={...}\
if#ES==0 then print(\"Usage: edit <path>\")return end;local UV=shell.resolve(ES[1])local YOH=fs.isReadOnly(UV)if\
fs.exists(UV)and fs.isDir(UV)then\
print(\"Cannot edit a directory.\")return end;local FP,ER=1,1\
local RK,HD=term.getSize()local G,F=0,0;local O={}local FF=true;local W,YRO,FC,B,QUE\
if term.isColour()then QUE=colours.black\
B=colours.white;W=colours.yellow;YRO=colours.yellow;FC=colours.green\
stringColour=colours.red else QUE=colours.black;B=colours.white;W=colours.white\
YRO=colours.white;FC=colours.white;stringColour=colours.white end;local XX=false;local OAK=1;local JE;if YOH then JE={\"Exit\",\"Print\"}else\
JE={\"Save\",\"Exit\",\"Print\"}end;local K=\"Press Ctrl to access menu\"\
local function IQ(LN)O={}\
if\
fs.exists(LN)then local WMS=fs.open(LN,\"r\")local D=WMS.readLine()while D do\
table.insert(O,D)D=WMS.readLine()end;WMS.close()end;if#O==0 then table.insert(O,\"\")end end\
local function DL(M)\
local NO=UV:sub(1,UV:len()-fs.getName(UV):len())if not fs.exists(NO)then fs.makeDir(NO)end;local GL=nil\
local function SP()\
GL=fs.open(M,\"w\")if GL then for MD,QK in ipairs(O)do GL.write(QK..\"\\n\")end else\
error(\"Failed to open \"..M)end end;local CV=pcall(SP)if GL then GL.close()end;return CV end\
local LQ={[\"and\"]=true,[\"break\"]=true,[\"do\"]=true,[\"else\"]=true,[\"elseif\"]=true,[\"end\"]=true,[\"false\"]=true,[\"for\"]=true,[\"function\"]=true,[\"if\"]=true,[\"in\"]=true,[\"local\"]=true,[\"nil\"]=true,[\"not\"]=true,[\"or\"]=true,[\"repeat\"]=true,[\"return\"]=true,[\"then\"]=true,[\"true\"]=true,[\"until\"]=true,[\"while\"]=true}\
local function MP(UG,V,H)local M=string.match(UG,V)\
if M then\
if type(H)==\"number\"then\
term.setTextColour(H)else term.setTextColour(H(M))end;term.write(M)term.setTextColour(B)return string.sub(UG,\
string.len(M)+1)end;return nil end\
local function JJ(GP)\
while string.len(GP)>0 do\
GP=\
\
\
\
\
MP(GP,\"^%-%-%[%[.-%]%]\",FC)or MP(GP,\"^%-%-.*\",FC)or MP(GP,\"^\\\".-[^\\\\]\\\"\",stringColour)or MP(GP,\"^\\'.-[^\\\\]\\'\",stringColour)or MP(GP,\"^%[%[.-%]%]\",stringColour)or\
MP(GP,\"^[%w_]+\",function(M)if LQ[M]then return YRO end;return B end)or MP(GP,\"^[^%w_]\",B)end end\
local function E()\
for ER=1,HD-1 do term.setCursorPos(1-G,ER)term.clearLine()\
local GH=O[ER+F]if GH~=nil then JJ(GH)end end;term.setCursorPos(FP-G,ER-F)end\
local function T(UR)local UC=O[UR]term.setCursorPos(1-G,UR-F)\
term.clearLine()JJ(UC)term.setCursorPos(FP-G,UR-F)end\
local function VD()term.setCursorPos(1,HD)term.clearLine()\
term.setCursorPos(RK-string.len(\
\"Ln \"..ER)+1,HD)term.setTextColour(W)term.write(\"Ln \")\
term.setTextColour(B)term.write(ER)term.setCursorPos(1,HD)\
if XX then\
term.setTextColour(B)\
for KS,Z in pairs(JE)do\
if KS==OAK then term.setTextColour(W)term.write(\"[\")\
term.setTextColour(B)term.write(Z)term.setTextColour(W)\
term.write(\"]\")term.setTextColour(B)else term.write(\" \"..Z..\" \")end end else term.setTextColour(W)term.write(K)\
term.setTextColour(B)end;term.setCursorPos(FP-G,ER-F)end\
local TC={Save=function()\
if YOH then K=\"Access denied\"else local EF,WC=DL(UV)if EF then K=\"Saved to \"..UV else\
K=\"Error saving to \"..UV end end;VD()end,Print=function()\
local VI=peripheral.find(\"printer\")if not VI then K=\"No printer attached\"return end;local HM=0\
local C=fs.getName(UV)\
if VI.getInkLevel()<1 then K=\"Printer out of ink\"return elseif\
VI.getPaperLevel()<1 then K=\"Printer out of paper\"return end;local X=term.current()\
local OM={getCursorPos=VI.getCursorPos,setCursorPos=VI.setCursorPos,getSize=VI.getPageSize,write=VI.write}\
OM.scroll=function()if HM==1 then\
VI.setPageTitle(C..\" (page \"..HM..\")\")end\
while not VI.newPage()do\
if VI.getInkLevel()<1 then\
K=\"Printer out of ink, please refill\"elseif VI.getPaperLevel()<1 then K=\"Printer out of paper, please refill\"else\
K=\"Printer output tray full, please empty\"end;term.redirect(X)VD()term.redirect(OM)\
local L=os.startTimer(0.5)sleep(0.5)end;HM=HM+1;if HM==1 then VI.setPageTitle(C)else\
VI.setPageTitle(C..\" (page \"..HM..\")\")end end;XX=false;term.redirect(OM)\
local I,HC=pcall(function()term.scroll()for A,IT in ipairs(O)do\
print(IT)end end)term.redirect(X)if not I then print(HC)end;while not VI.endPage()do\
K=\"Printer output tray full, please empty\"VD()sleep(0.5)end;XX=true\
if HM>1 then K=\
\"Printed \"..HM..\" Pages\"else K=\"Printed 1 Page\"end;VD()end,Exit=function()\
FF=false end}local function SI(J)TC[JE[J]]()\
if XX then XX=false;term.setCursorBlink(true)end;VD()end\
local function FFCS(FP,ER)local RD=FP-G;local A=ER-F\
local UM=false\
if RD<1 then G=FP-1;RD=1;UM=true elseif RD>RK then G=FP-RK;RD=RK;UM=true end\
if A<1 then F=ER-1;A=1;UM=true elseif A>HD-1 then F=ER- (HD-1)A=HD-1;UM=true end;if UM then E()end;term.setCursorPos(RD,A)VD()end;IQ(UV)term.setBackgroundColour(QUE)term.clear()\
term.setCursorPos(FP,ER)term.setCursorBlink(true)E()VD()\
while FF do\
local U,EBZ,MR,S=os.pullEvent()\
if U==\"key\"then\
if EBZ==keys.up then\
if not XX then if ER>1 then ER=ER-1\
FP=math.min(FP,string.len(O[ER])+1)FFCS(FP,ER)end end elseif EBZ==keys.down then\
if not XX then if ER<#O then ER=ER+1\
FP=math.min(FP,string.len(O[ER])+1)FFCS(FP,ER)end end elseif EBZ==keys.tab then if not XX and not YOH then O[ER]=\"  \"..O[ER]FP=FP+2\
FFCS(FP,ER)T(ER)end elseif EBZ==keys.pageUp then\
if not XX then if\
ER- (HD-1)>=1 then ER=ER- (HD-1)else ER=1 end;FP=math.min(FP,\
string.len(O[ER])+1)FFCS(FP,ER)end elseif EBZ==keys.pageDown then if not XX then\
if ER+ (HD-1)<=#O then ER=ER+ (HD-1)else ER=#O end;FP=math.min(FP,string.len(O[ER])+1)\
FFCS(FP,ER)end elseif EBZ==keys.home then if\
not XX then FP=1;FFCS(FP,ER)end elseif EBZ==keys[\"end\"]then if not XX then FP=\
string.len(O[ER])+1;FFCS(FP,ER)end elseif\
EBZ==keys.left then\
if not XX then if FP>1 then FP=FP-1 elseif FP==1 and ER>1 then\
FP=string.len(O[ER-1])+1;ER=ER-1 end;FFCS(FP,ER)else\
OAK=OAK-1;if OAK<1 then OAK=#JE end;VD()end elseif EBZ==keys.right then\
if not XX then\
if FP<string.len(O[ER])+1 then FP=FP+1 elseif FP==\
string.len(O[ER])+1 and ER<#O then FP=1;ER=ER+1 end;FFCS(FP,ER)else OAK=OAK+1;if OAK>#JE then OAK=1 end;VD()end elseif EBZ==keys.delete then\
if not XX and not YOH then table.remove(O,ER)ER=ER-1;E()end elseif EBZ==keys.backspace then\
if not XX and not YOH then\
if FP>1 then local BM=O[ER]O[ER]=\
string.sub(BM,1,FP-2)..string.sub(BM,FP)T(ER)\
FP=FP-1;FFCS(FP,ER)elseif ER>1 then local GVK=string.len(O[ER-1])O[ER-1]=O[ER-1]..\
O[ER]table.remove(O,ER)E()FP=GVK+1;ER=ER-1\
FFCS(FP,ER)end end elseif EBZ==keys.enter then\
if not XX and not YOH then local KVR=O[ER]\
local KI,X=string.find(KVR,\"^[ ]+\")if not X then X=0 end;O[ER]=string.sub(KVR,1,FP-1)\
table.insert(O,ER+1,\
string.rep(' ',X)..string.sub(KVR,FP))E()FP=X+1;ER=ER+1;FFCS(FP,ER)elseif XX then SI(OAK)end elseif EBZ==keys.leftCtrl or EBZ==keys.rightCtrl then XX=not XX;if XX then\
term.setCursorBlink(false)else term.setCursorBlink(true)end\
VD()end elseif U==\"char\"then\
if not XX and not YOH then local DLDW=O[ER]O[ER]=string.sub(DLDW,1,FP-1)..EBZ..\
string.sub(DLDW,FP)T(ER)\
FP=FP+1;FFCS(FP,ER)elseif XX then\
for JQ,TK in ipairs(JE)do if string.lower(string.sub(TK,1,1))==\
string.lower(EBZ)then SI(JQ)break end end end elseif U==\"paste\"then\
if not XX and not YOH then local ERD=O[ER]O[ER]=string.sub(ERD,1,FP-1)..EBZ..\
string.sub(ERD,FP)T(ER)FP=FP+\
string.len(EBZ)FFCS(FP,ER)end elseif U==\"mouse_click\"then\
if not XX then\
if EBZ==1 then local KPI,M=MR,S;if M<HD then\
ER=math.min(math.max(F+M,1),#O)\
FP=math.min(math.max(G+KPI,1),string.len(O[ER])+1)FFCS(FP,ER)end end end elseif U==\"mouse_scroll\"then if not XX then\
if EBZ==-1 then if F>0 then F=F-1;E()end elseif EBZ==1 then\
local TN=#O- (HD-1)if F<TN then F=F+1;E()end end end elseif\
U==\"term_resize\"then RK,HD=term.getSize()FFCS(FP,ER)VD()E()end end;term.clear()term.setCursorBlink(false)\
term.setCursorPos(1,1)",
}