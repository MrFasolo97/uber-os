{
  [ "/etc" ] = true,
  [ "/etc/init.d" ] = true,
  [ "/sbin" ] = true,
  [ "/etc/init.d/udevd" ] = "argv={...}if#argv==0 then\
print(\"udevd start|stop|restart|status\")return end;if argv[1]==\"status\"then\
print(thread.getDaemonStatus(\"udevd\"))end;if argv[1]==\"start\"then\
thread.runDaemon(\"/sbin/udev\",\"udevd\")end;if argv[1]==\"stop\"then\
thread.stopDaemon(\"udevd\")end\
if argv[1]==\"restart\"then\
thread.stopDaemon(\"udevd\")thread.runDaemon(\"/sbin/udev\",\"udevd\")end",
  [ "/sbin/udev" ] = "udev={}local F={}F[\"hdd\"]=\"HDD\"\
local Z={[\"modem\"]=\"net\",[\"computer\"]=\"cmp\",[\"turtle\"]=\"trt\",[\"drive\"]=\"fdd\",[\"monitor\"]=\"disp\",[\"printer\"]=\"prn\"}function udev.getMnemonics()local CK={}\
for OS,EA in pairs(F)do table.insert(CK,OS)end;return CK end\
function udev.readDevice(Y)local QH=F[Y]if Y==\
\"hdd\"then\
return textutils.serialize({type=\"DISK\",mounted=\"/\"})end\
if string.sub(Y,1,3)==\"fdd\"then return\
textutils.serialize({type=\"DISK\",mounted=disk.getMountPath(QH)})end end\
local function A()local IY=peripheral.getNames()for LL,XW in pairs(IY)do local J=0\
local W=peripheral.getType(XW)while F[Z[W]..tostring(J)]do J=J+1 end\
F[Z[W]..tostring(J)]=XW end end;udev=applyreadonly(udev)A()\
while true do local B=os.pullEvent()if B:sub(1,10)==\
\"peripheral\"then A()end end",
  [ "/PKGINFO.lua" ] = "DEPENDS = {\"uberkernel\", \"corelib\"}\
VERSION = {0, 2, 1}",
}