local _UID = 0
local passwd = {}
lua.include("split")

users = {}
function users.getActiveUID()
  return _UID 
end

function users.getUsernameByUID(uid)
  for i = 1, #passwd do
    if passwd[i].uid == uid then
      return passwd[i].name
    end
  end
  return nil
end

function users.login(name, pwd)
  for i = 1, #passwd do
    if (passwd[i].name == name) and
    (passwd[i].pwd == pwd) then
      _UID = passwd[i].uid
      return true
    end
  end
  return false
end

function users.logout()
  _UID = 0
end

local function updatePasswd()
  if not fs.exists("/etc/passwd") then
    kernel.panic("/etc/passwd not found!")
  end
  passwdFile = fs.open("/etc/passwd", "r")
  local user = passwdFile.readLine()
  local tmp
  while user do
    tmp = user:split(":")
    passwd[#passwd + 1] = {
      name = tmp[1],
      pwd = tmp[2],
      home = tmp[6],
      shell = tmp[7],
      uid = tonumber(tmp[3])
    }
    user = passwdFile.readLine()
  end
  passwdFile.close()
end

updatePasswd()

users = applyreadonly(users)

